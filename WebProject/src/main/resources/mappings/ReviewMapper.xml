<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hungpick.dao.IReviewDao"> <!-- "<" 는 문법오류나서  "<![CDATA[ < ]]>" 이렇게 해야한다. -->
	
	<resultMap type="brandDto" id="BrandDtoRm">
	<id column="BRAND_CODE" property="brandCode"/>
    <result column="BRAND_NAME" property="brandName"/>
    <result column="BRAND_IMG" property="brandImg"/>
    <result column="BRAND_DESCRIPTION" property="brandDescription"/>
	</resultMap>

	<resultMap type="memberDto" id="MemberDtoRm">
	<id column="MEMBER_CODE" property="memberCode"/>
	<result column="MEMBER_ID" property="memberId"/>
    <result column="MEMBER_PW" property="memberPw"/>
    <result column="MEMBER_NAME" property="memberName"/>
    <result column="MEMBER_NICKNAME" property="memberNickname"/>
    <result column="MEMBER_EAMIL" property="memberEmail"/>
    <result column="MEMBER_NUMBER" property="memberNumber"/> 
    <result column="MEMBER_DATE" property="memberDate"/>
    <result column="HOLD_POINT" property="holdPoint"/>  
	</resultMap>
	
	<resultMap type="menuDto" id="MenuDtoRm">
	<id column="BRAND_CODE" property="brandCode"/>
	<id column="MENU_CODE" property="menuCode"/>
    <result column="MENU_NAME" property="menuName"/>
    <result column="MENU_IMG" property="menuImg"/>
    <result column="MENU_PRICE" property="menuPrice"/>
    <result column="MENU_DESCRIPTION" property="menuDescription"/>
    <result column="MENU_INGREDIENTS" property="menuIngredients"/>   
	</resultMap>
	
	<resultMap type="reviewDto" id="ReviewDtoRm">
	<id column="BRAND_CODE" property="brandCode"/>
	<id column="MENU_CODE" property="menuCode"/>
	<id column="REVIEW_CODE" property="reviewCode"/>
    <id column="MEMBER_CODE" property="memberCode"/>
    <result column="REVIEW_SCORE" property="reviewScore"/>
    <result column="REVIEW_CONTENT" property="reviewContent"/>
    <result column="REVIEW_DATE" property="reviewDate"/>
    <result column="REVIEW_IMG" property="reviewImg"/>
    <result column="REVIEW_CONFIRM" property="reviewConfirm"/>
    <result column="EARN_POINT" property="earnPoint"/>
    <result column="EARNDATE_POINT" property="earnDatePoint"/>
	</resultMap>
	
	
	<resultMap type="reviewVo" id="ReviewVoRm">
        <collection property="memberDto" resultMap="MemberDtoRm"></collection >
        <collection property="reviewDto" resultMap="ReviewDtoRm"></collection >
	</resultMap>
	
	<select id="sltReviewList" parameterType="String" resultMap="ReviewVoRm">
		SELECT A.MEMBER_NICKNAME, B.BRAND_CODE, B.MENU_CODE, B.REVIEW_CODE, B.MEMBER_CODE, 
		B.REVIEW_SCORE, B.REVIEW_CONTENT, TO_CHAR(B.REVIEW_DATE,'YYYY"년"MM"월"DD"일"') AS REVIEW_DATE
		FROM MEMBERS A JOIN REVIEW B ON A.MEMBER_CODE = B.MEMBER_CODE 
			<if test="brandCode != null and brandCode != ''">
				AND B.BRAND_CODE = #{brandCode}
			</if>
			<if test="menuCode != null and menuCode != ''">
				AND B.MENU_CODE = #{menuCode}
			</if>
			<!-- 
			<if test="reviewConfirm != null and reviewConfirm != ''">
				AND reviewConfirm = #{reviewConfirm}
			</if>
			 -->	
	</select>
	
	<select id="sltLookUp" parameterType="String" resultMap="ReviewVoRm">
		SELECT A.MEMBER_NICKNAME, B.REVIEW_SCORE, B.REVIEW_CONTENT, 
		TO_CHAR(B.REVIEW_DATE,'YYYY"년"MM"월"DD"일"') AS REVIEW_DATE, B.REVIEW_IMG
		FROM MEMBERS A JOIN REVIEW B ON A.MEMBER_CODE = B.MEMBER_CODE
			<if test="brandCode != null and brandCode != ''">
				AND B.BRAND_CODE = #{brandCode}
			</if>
			<if test="menuCode != null and menuCode != ''">
				AND B.MENU_CODE = #{menuCode}
			</if>
			<if test="reviewCode != null and reviewCode != ''">
				AND B.REVIEW_CODE = #{reviewCode}
			</if>	
			<if test="memberCode != null and memberCode != ''">
				AND B.MEMBER_CODE = #{memberCode}
			</if>
		
	</select>
	
	<resultMap type="ReviewRankingVo" id="ReviewRankingVoRm">
		<collection property="brandDto" resultMap="BrandDtoRm"></collection >
        <collection property="menuDto" resultMap="MenuDtoRm"></collection >
        <collection property="reviewDto" resultMap="ReviewDtoRm"></collection >
	</resultMap>
	
	<select id="sltReviewRanking" resultMap="ReviewRankingVoRm">
		SELECT * FROM (
		SELECT A.BRAND_CODE, A.BRAND_NAME, B.MENU_CODE, B.MENU_NAME, TRUNC(AVG(C.REVIEW_SCORE), 2) REVIEW_SCORE
		FROM BRAND A JOIN MENU B ON A.BRAND_CODE = B.BRAND_CODE 
		JOIN REVIEW C ON B.BRAND_CODE = C.BRAND_CODE AND B.MENU_CODE = C.MENU_CODE
		WHERE C.REVIEW_CONFIRM = 'N' GROUP BY A.BRAND_CODE, A.BRAND_NAME, B.MENU_CODE, B.MENU_NAME
		ORDER BY REVIEW_SCORE DESC
		) WHERE ROWNUM <![CDATA[ < ]]>= 10	
	</select>
	
	<insert id="insertReview" parameterType="reviewDto">
		<selectKey resultType="String" keyProperty="reviewCode" order="BEFORE">
		SELECT TO_CHAR(NVL(MAX(TO_NUMBER(REVIEW_CODE)), 0 ) +1) FROM REVIEW
		WHERE BRAND_CODE = #{brandCode} AND MENU_CODE = #{menuCode} 
		</selectKey>
		INSERT INTO REVIEW VALUES (#{brandCode}, #{menuCode}, 
		#{reviewCode}, #{memberCode}, #{reviewScore}, #{reviewContent}, SYSDATE, 
		#{reviewImg}, 'N', 500, '2000-01-01')	
	</insert> <!-- 나중에 관리자가 'N'에서 Y로 바꿔주고 포인트획득날짜도 update로 바꿔줘야함 -->

	<select id="sltReviewN" resultType="reviewDto">
		SELECT * FROM REVIEW WHERE REVIEW_CONFIRM = 'N' AND REVIEW_IMG IS NOT NULL
	</select>
	
	<update id="updateReviewY" parameterType="String">
		UPDATE REVIEW SET REVIEW_CONFIRM = 'Y', EARNDATE_POINT = SYSDATE 
		WHERE BRAND_CODE = #{brandCode} AND MENU_CODE = #{menuCode}
		AND REVIEW_CODE = #{reviewCode} AND MEMBER_CODE = #{memberCode}
	</update>
	
	<update id="updateHoldPoint" parameterType="String">
		UPDATE MEMBERS SET HOLD_POINT = HOLD_POINT + 500 WHERE MEMBER_CODE = #{memberCode}
	</update>
	
	<delete id="deleteReview" parameterType="String">
		DELETE FROM REVIEW WHERE BRAND_CODE = #{brandCode} AND MENU_CODE = #{menuCode}
		AND REVIEW_CODE = #{reviewCode} AND MEMBER_CODE = #{memberCode}
	</delete>
</mapper>